var cityName = document.getElementById("city");
var weatherIcon = document.getElementById("icon1");
var icon2 = document.getElementById("icon2");
var icon3 = document.getElementById("icon3");
var desc2 = document.getElementById("desc2");
var desc3 = document.getElementById("desc3");
var weatherDescribtion = document.getElementById("describtion");
var temp = document.getElementById("temp");
var rainPos = document.getElementById("rainPos");
var windSpeed = document.getElementById("windSpeed");
var direction = document.getElementById("windDir");
var day1 = document.getElementById("day1");
var day2 = document.getElementById("day2");
var day3 = document.getElementById("day3");
var date = document.getElementById("date");
var maxTemp2 = document.getElementById("max2");
var minTemp2 = document.getElementById("min2");
var maxTemp3 = document.getElementById("max3");
var minTemp3 = document.getElementById("min3");

var data = [];
var data1 = [];
var data2 = [];
var data3 = [];
var days = ["Sunday" , "Monday" , "Tuesday" , "Wednesday" , "Thrusday" , "Friday" , " Saturday"];
var Months = ["January" , "February" , "March" , "April" , "May" , "June" , "July" , "August" , "September" , "October" , "November" , "December"]
var apiKey = "7fd32e992903409db66163435242309";
var is_day ;
var nextDay;
var afterDay;








async function ReloadPage(){
    var response = await fetch(`http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=tanta`);
    data2 = await response.json();
    console.log(data2);

    changingTexts(data2);

    var response = await fetch(`http://api.weatherapi.com/v1/astronomy.json?key=${apiKey}&q=tanta`);
    data3 = await response.json();

    const sunset = data3.astronomy.astro.sunset;
    const sunrise = data3.astronomy.astro.sunrise;
    const currTime = new Date(data3.location.localtime);
    const [sunriseTime, sunsetTime] = parseTimes(sunrise,sunset);

    day1.innerHTML = days[currTime.getDay()];
    day2.innerHTML = days[currTime.getDay()+1];
    day3.innerHTML = days[currTime.getDay()+2];

    date.innerHTML = currTime.getDate() + " " + Months[currTime.getMonth()];
    
    if(currTime>= sunriseTime && currTime<=sunsetTime){
        is_day = "day";
    }else{
        is_day = "night";
    }
    await getWeatherDetails(data2.current.condition.code);

    var response = await fetch(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=Tanta&days=3`);
    data = await response.json();
    maxTemp2.innerHTML = data.forecast.forecastday[1].day.maxtemp_c + " " + 'C';
    minTemp2.innerHTML = data.forecast.forecastday[1].day.mintemp_c + " " + 'C';
    maxTemp3.innerHTML = data.forecast.forecastday[2].day.maxtemp_c + " " + 'C';
    minTemp3.innerHTML = data.forecast.forecastday[2].day.mintemp_c + " " + 'C';
    icon2.setAttribute("src", data.forecast.forecastday[1].day.condition.icon);
    icon3.setAttribute("src", data.forecast.forecastday[2].day.condition.icon);
    
}


window.addEventListener('Reload',ReloadPage());

function changingTexts(data){
    cityName.innerHTML = data.location.name;
    temp.innerHTML = data.current.temp_c + ' ' +'C';
    rainPos.innerHTML = data.current.humidity + '%';
    windSpeed.innerHTML = data.current.wind_kph +' '+ "Km/h";
    switch(data.current.wind_dir){
        case 'N':
            direction.innerHTML = "North";
            break;
        case 'E':
            direction.innerHTML = "East";
            break;   
        case 'S':
            direction.innerHTML = "South";
            break;
        case 'W':
            direction.innerHTML = "West";
            break;     
    }
}


async function getlocationWeather(){
    var inputText = document.getElementById("form").value;
    var response = await fetch(`http://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${inputText}`);
    data2 = await response.json();
    changingTexts(data2);
    console.log(data2);
    await getWeatherDetails(data2.current.condition.code);
}

async function getWeatherDetails(code){
    const response = await fetch("https://www.weatherapi.com/docs/weather_conditions.json");
    data1 = await response.json();   
    const currIndex = data1.findIndex(item => item.code === code);
    const icon1 = data1[currIndex].icon;
    setIcon(icon1);
    if(is_day == "day"){
        weatherDescribtion.innerHTML = data1[currIndex].day;
    }else{
        weatherDescribtion.innerHTML = data1[currIndex].night;
    }
    
}

function setIcon(icon){
    weatherIcon.setAttribute("src",`https://cdn.weatherapi.com/weather/64x64/${is_day}/${icon}.png`);
}

async function getlocalTimes() {
    var inputText = document.getElementById("form").value;
    var response = await fetch(`http://api.weatherapi.com/v1/astronomy.json?key=${apiKey}&q=${inputText}`);
    data3 = await response.json();


    const sunset = data3.astronomy.astro.sunset;
    const sunrise = data3.astronomy.astro.sunrise;
    const currTime = new Date(data3.location.localtime);
    const [sunriseTime, sunsetTime] = parseTimes(sunrise,sunset);

    day1.innerHTML = days[currTime.getDay()];
    day2.innerHTML = days[currTime.getDay()+1];
    day3.innerHTML = days[currTime.getDay()+2];
    date.innerHTML = currTime.getDate() + " " + Months[currTime.getMonth()];
    

    if(currTime>= sunriseTime && currTime<=sunsetTime){
        is_day = "day";
    }else{
        is_day = "night";
    }
    var response = await fetch(`http://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${inputText}&days=3`);
    data = await response.json();
    console.log(data);

    maxTemp2.innerHTML = data.forecast.forecastday[1].day.maxtemp_c + " " + 'C';
    minTemp2.innerHTML = data.forecast.forecastday[1].day.mintemp_c + " " + 'C';
    maxTemp3.innerHTML = data.forecast.forecastday[2].day.maxtemp_c + " " + 'C';
    minTemp3.innerHTML = data.forecast.forecastday[2].day.mintemp_c + " " + 'C';
    icon2.setAttribute("src", data.forecast.forecastday[1].day.condition.icon);
    icon3.setAttribute("src", data.forecast.forecastday[2].day.condition.icon);
    desc2.innerHTML = data.forecast.forecastday[1].day.condition.text;
    desc3.innerHTML = data.forecast.forecastday[2].day.condition.text;

}

function parseTimes(sunrise, sunset) {
    const [sunriseHour, sunriseMinute] = sunrise.split(":");
    const [sunsetHour, sunsetMinute] = sunset.split(":");

    const sunriseTime = new Date();
    sunriseTime.setHours(parseInt(sunriseHour), parseInt(sunriseMinute));

    const sunsetTime = new Date();
    sunsetTime.setHours(parseInt(sunsetHour) + 12, parseInt(sunsetMinute)); // Assuming sunset is in PM

    return [sunriseTime, sunsetTime];
}








